// File generated using battery-embed (https://github.com/batterycenter/embed)
// Embedded file: {{ resource_path }} as '{{ identifier }}' | filesize: {{ resource_size }} bytes | was embedded as binary: {{ is_binary }}
// Header file containing the declaration for accessing the embedded data: {{ identifier }}.hpp
// DO NOT EDIT THIS FILE!!!

#include <cinttypes>
#include <cstddef>
#include <string>
#include <vector>
#include "{{ file_identifier }}.hpp"

namespace EmbedInternal {

    const std::string {{identifier}}_t::m_data = { {{ resource_hex }} };   // NOLINT
    const bool {{identifier}}_t::m_isBinary = {{ is_binary | lower }};

#ifndef B_PRODUCTION_MODE
    const std::string {{identifier}}_t::m_filepath = "{{ resource_path }}";
#endif

} // namespace EmbedInternal

std::ostream& operator<<(std::ostream& os, const EmbedInternal::{{identifier}}_t& data) { 
    os << data.str(); 
    return os; 
}

namespace Embed {
{% for ns in identifier_namespaces %}namespace {{ ns }} { 
{% endfor %}    EmbedInternal::{{identifier}}_t {{file_identifier}};
{% for ns in identifier_namespaces %}} 
{% endfor %}}
